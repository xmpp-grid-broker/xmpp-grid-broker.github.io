import {Injectable} from '@angular/core';
import {JXT} from 'stanza.io';

import {JxtErrorToXmppError, XmppDataForm, XmppErrorCondition, XmppIqType, XmppService} from '../../core/';

@Injectable()
export class TopicCreationService {
  constructor(private xmppService: XmppService) {
  }

  public createTopic(topicIdentifier: any, config: XmppDataForm): Promise<string> {
    if (!topicIdentifier) {
      topicIdentifier = true;
    }

    const cmd = {
      type: XmppIqType.Set,
      pubsub: {
        create: topicIdentifier,
        config: {form: config ? config.toJSON() : {}}
      }
    };

    return this.xmppService.executeIqToPubsub(cmd).then(result => {
      if (result.pubsub) {
        // If the service returns a nodeID (generated by the server)
        return result.pubsub.create;
      } else {
        return topicIdentifier;
      }
    }).catch((err) => {
      throw JxtErrorToXmppError(err, {
        [XmppErrorCondition.FeatureNotImplemented]: 'Service does not support node creation',
        [XmppErrorCondition.RegistrationRequired]: 'Service requires registration',
        [XmppErrorCondition.Forbidden]: 'You do not have sufficient privileges to create topics or collections',
        [XmppErrorCondition.Conflict]: `Node ${topicIdentifier} does already exists`,
        [XmppErrorCondition.NotAcceptable]: `Service does not support instant nodes. You must provide a topic/collection identifier`,
      });
    });
  }

  /**
   * Support for this feature is OPTIONAL
   * (See "Request Default Node Configuration Options" in XEP-0060)
   */
  public loadDefaultConfig(): Promise<XmppDataForm> {
    const cmd = {
      type: XmppIqType.Get,
      pubsubOwner: {
        'default': true,
      }
    };
    return this.xmppService.executeIqToPubsub(cmd).then(result => {
      return XmppDataForm.fromJSON(result.pubsubOwner.default.form);
    }).catch((err) => {
      throw JxtErrorToXmppError(err, {
        [XmppErrorCondition.FeatureNotImplemented]: 'Service does not support node creation or loading the default node configuration',
      });
    });
  }

}
